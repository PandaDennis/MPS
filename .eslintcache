[{"/Users/dennisdev/Documents/GitHub/MMPS/src/index.js":"1","/Users/dennisdev/Documents/GitHub/MMPS/src/App.js":"2","/Users/dennisdev/Documents/GitHub/MMPS/src/reportWebVitals.js":"3","/Users/dennisdev/Documents/GitHub/MMPS/src/components/Upload.js":"4","/Users/dennisdev/Documents/GitHub/MMPS/src/components/project_management.js":"5","/Users/dennisdev/Documents/GitHub/MMPS/src/components/btn/uploadBTN.js":"6","/Users/dennisdev/Documents/GitHub/MMPS/src/components/page/createProject/c_project.js":"7","/Users/dennisdev/Documents/GitHub/MMPS/src/components/page/projectList/ProjectList.js":"8"},{"size":508,"mtime":1622381923285,"results":"9","hashOfConfig":"10"},{"size":1788,"mtime":1622381923282,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1622381923285,"results":"12","hashOfConfig":"10"},{"size":342,"mtime":1622381923283,"results":"13","hashOfConfig":"10"},{"size":590,"mtime":1622381923285,"results":"14","hashOfConfig":"10"},{"size":3517,"mtime":1622381923283,"results":"15","hashOfConfig":"10"},{"size":9894,"mtime":1622381923284,"results":"16","hashOfConfig":"10"},{"size":6893,"mtime":1622381923284,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"o6p6i",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dennisdev/Documents/GitHub/MMPS/src/index.js",[],["36","37"],"/Users/dennisdev/Documents/GitHub/MMPS/src/App.js",[],"/Users/dennisdev/Documents/GitHub/MMPS/src/reportWebVitals.js",[],"/Users/dennisdev/Documents/GitHub/MMPS/src/components/Upload.js",[],"/Users/dennisdev/Documents/GitHub/MMPS/src/components/project_management.js",[],"/Users/dennisdev/Documents/GitHub/MMPS/src/components/btn/uploadBTN.js",[],"/Users/dennisdev/Documents/GitHub/MMPS/src/components/page/createProject/c_project.js",["38"],"import React, { useEffect, useState } from 'react';\nimport Swal from 'sweetalert2'\nimport './c_project.css';\nimport { Layout, Form, Input, Button, Row, Col, Typography, Select, Modal ,Switch} from 'antd';\nimport { ExclamationCircleOutlined ,CloseOutlined, CheckOutlined} from '@ant-design/icons';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nconst { confirm } = Modal;\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { Content } = Layout;\n\n\n\n\nconst uuid = uuidv4();\n\nconst children = [];\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\nconst projectGroup = [];\nfor (let i = 10; i < 36; i++) {\n    projectGroup.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n\n\n\nconst submitHandler = (values) => {\n    const axios = require('axios');\n    var subMitData = [];\n   \n    subMitData.push(values.project);\n    console.log(subMitData);\n\n    axios.post('/project/create',\n        subMitData\n    )\n        .then(function (response) {\n            console.log(\"Testing  :\" + response);\n            if (response.data.status === 0 && response.status === 200) {\n                console.log(response);\n\n            } else {\n                console.log(\"Error\")\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n\n        });\n};\n\n\n\n\nfunction Create_project() {\n    const [projectownUser, setprojectownUser] = useState([])\n    const [changest, setchangest] = useState(false)\n    useEffect(() => {\n        axios\n            .get('https://jsonplaceholder.typicode.com/users')\n            .then(res => {\n                setprojectownUser(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n            \n    }, [])\n    const handleChange = (value) => {\n        if (value === 'Change' && changest === false) {\n            showConfirm(\"other\")\n        }\n        if (value === 'Change' && changest === true) {\n            showConfirm(\"Back\")\n        }\n\n    }\n    const showConfirm = (type) => {\n        if (type === 'other') {\n            confirm({\n                title: 'Do you Change to change these items?',\n                icon: <ExclamationCircleOutlined />,\n                content: 'Some descriptions',\n                onOk() {\n                    console.log('OK and change');\n                    axios\n                        .get('https://jsonplaceholder.typicode.com/comments?postId=1')\n                        .then(res => {\n                            console.log(\"applwe(Test1): \" + JSON.stringify(res.data))\n                            setprojectownUser(res.data)\n                            setchangest(true)\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                },\n                onCancel() {\n                    console.log('Cancel');\n\n                },\n            });\n        } else if (type === 'Back') {\n            confirm({\n                title: 'Do you go back to change these items?',\n                icon: <ExclamationCircleOutlined />,\n                content: 'Some descriptions',\n                onOk() {\n                    console.log('OK and change');\n                    axios\n                        .get('https://jsonplaceholder.typicode.com/users')\n                        .then(res => {\n                            setprojectownUser(res.data)\n                            setchangest(false)\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                },\n                onCancel() {\n                    console.log('Cancel');\n\n                },\n            });\n\n        }\n\n    }\n\n    return (\n        <>\n            <Layout style={{ position: 'fixed', zIndex: 1, width: '100%', height: '100%' }}>\n                <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                        <Row>\n                            <Col span={8}><Title level={4}>Create Project</Title></Col>\n                        </Row>\n                        <hr />\n                        <Form\n                            name=\"nest-messages\"\n                            onFinish={submitHandler}\n                        >\n                            <Form.Item\n                                name={['project', 'projectid']}\n                                label=\"Project ID\"\n                                initialValue = {uuid}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input the Project Name',\n                                    },\n                                ]}\n                            >\n                                <Input disabled={true}/>\n                            </Form.Item>\n                            <Form.Item\n                                name={['project', 'projectname']}\n                                label=\"Name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input the Project Name',\n                                    },\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Owner\"\n                                name={['project', 'master']}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please Select Owner',\n                                    },\n                                ]}\n\n                            >\n                                <Select onChange={handleChange} defaultActiveFirstOption={true}>\n                                    <Select.OptGroup label=\"Owner User\">\n                                        {projectownUser.map(item => <Select.Option value={item.name} key={item.id}>{item.name}</Select.Option>)}\n                                    </Select.OptGroup>\n                                    <Select.OptGroup label=\"Other User\">\n                                        <Select.Option key=\"Change\" >{changest ?  \"Go Back to Owner User\" : \"Change User\" }</Select.Option>\n                                    </Select.OptGroup>\n                                </Select>\n\n\n\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Project Group\"\n                                name={['project', 'projectGroup']}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please Select Project User',\n                                    },\n                                ]}\n\n                            >\n                                <Select\n                                    mode=\"multiple\"\n                                    size=\"default\"\n                                    placeholder=\"Please select\"\n                                    // defaultValue={}\n                                    onChange={handleChange}\n                                    style={{ width: '100%' }}\n                                    >\n                                    {projectGroup}\n                                </Select>\n\n\n\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Project User\"\n                                name={['project', 'projectUser']}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please Select Project User',\n                                    },\n                                ]}\n\n                            >\n                                <Select\n                                    mode=\"multiple\"\n                                    size=\"default\"\n                                    placeholder=\"Please select\"\n                                    // defaultValue={}\n                                    onChange={handleChange}\n                                    style={{ width: '100%' }}\n                                    >\n                                    {children}\n                                </Select>\n\n\n\n                            </Form.Item>\n                            \n                            <Form.Item \n                            label=\"Status\"\n                            name={['project', 'projectStatus']}\n                            valuePropName=\"checked\"\n                            initialValue = {true}\n                            >\n                            \n                            <Switch\n                                checkedChildren={<CheckOutlined />}\n                                unCheckedChildren={<CloseOutlined />}\n                            />\n\n                            </Form.Item>\n\n                            <Form.Item >\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </Content>\n\n            </Layout>\n\n\n\n\n        </>\n    );\n\n\n\n\n}\n\n\n\n\n\n\n\n\nexport default Create_project\n","/Users/dennisdev/Documents/GitHub/MMPS/src/components/page/projectList/ProjectList.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":12},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Swal' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]